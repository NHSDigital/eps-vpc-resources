name: deploy_pr

on:
  pull_request:
    branches: [main]

env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

jobs:
  quality_checks:
    uses: NHSDigital/eps-workflow-quality-checks/.github/workflows/quality-checks.yml@v3.0.0
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pr_title_format_check:
    uses: ./.github/workflows/pr_title_check.yml

  get_issue_number:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{steps.get_issue_number.outputs.result}}

    steps:
      - uses: actions/github-script@v7
        name: get issue number
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string

  get_commit_id:
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.commit_id.outputs.commit_id }}
    steps:
      - name: Get Commit ID
        id: commit_id
        run: |
          echo "commit_id=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  # package_code:
  #   needs: [get_issue_number, get_commit_id, quality_checks]
  #   uses: ./.github/workflows/cdk_package_code.yml
  #   with:
  #     VERSION_NUMBER: PR-${{ needs.get_issue_number.outputs.issue_number }}
  #     COMMIT_ID: ${{ needs.get_commit_id.outputs.commit_id }}

  # release_code:
  #   needs: [get_issue_number, package_code, get_commit_id, quality_checks]
  #   uses: ./.github/workflows/release_all_stacks.yml
  #   with:
  #     SERVICE_NAME: cpt-ui-pr-${{needs.get_issue_number.outputs.issue_number}}
  #     TARGET_ENVIRONMENT: dev-pr
  #     VERSION_NUMBER: PR-${{ needs.get_issue_number.outputs.issue_number }}
  #     COMMIT_ID: ${{ needs.get_commit_id.outputs.commit_id }}
  #   secrets:
  #     CDK_PULL_IMAGE_ROLE: ${{ secrets.DEV_CDK_PULL_IMAGE_ROLE }}
  #     CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
    
